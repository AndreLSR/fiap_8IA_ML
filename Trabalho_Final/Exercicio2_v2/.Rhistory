# Chunk 2
# install.packages("FactoMineR")
# install.packages("factoextra")
# install.packages("mltools")
# install.packages("data.table")
library("FactoMineR")
library("factoextra")
library("mltools")
library("caret")
library("data.table")
# Chunk 3
dados <- read.csv(file = "/Users/andrero/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalhos/Trabalho2/data/Usuarios-TempoMedioQuantidade.csv", header = TRUE, sep = ";")
# View(dados)
# Chunk 4
sum(is.nan(as.matrix(dados)))
sum(is.na(as.matrix(dados)))
sum(is.infinite(as.matrix(dados)))
ncol(dados)
nrow(dados)
df <- dados
df$NomeUsuario <- NULL
df$Login <- NULL
df$Email <- NULL
df$TempoMedio <- NULL
# View(df)
# Chunk 5
boxplot(Quantidade ~ NomeEquipe, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
# Chunk 6
df1 <- df[-c(1,110,132,152,156,160,474),]
# View(df1)
boxplot(Quantidade ~ NomeEquipe, data=df1, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# Chunk 7
dt <- as.data.table(df1)
dt1 <- one_hot(dt, cols = "auto", sparsifyNAs = FALSE, naCols = FALSE,
dropCols = TRUE, dropUnusedLevels = FALSE)
df1 <- as.data.frame(dt1)
df1$`NomeEquipe_Equipe Dados Pesquisa` <- NULL
# Chunk 8
# df.scaled <- scale(df1)
# Chunk 9
kc <- kmeans(df1, 5, nstart = 50)
kc[["cluster"]]
kc[["centers"]]
# Chunk 10
fviz_cluster(kc, data = df1)
# Chunk 11
k.max <- 20
wss <- sapply(1:k.max,
function(k){kmeans(df1, k, nstart=50,iter.max = 50)$tot.withinss})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Número de clusters K",
ylab="Soma total da diferença dos quadrados internos dos clusters")
# Chunk 12
# install.packages("kohonen")
library("kohonen")
# Chunk 13
set.seed(593)
# Chunk 14
dados_tm <- read.csv(file = "/Users/andrero/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalhos/Trabalho2/data/Usuarios-TempoMedioQuantidade.csv", header = TRUE, sep = ";")
# View(dados_tm)
# Chunk 15
sum(is.nan(as.matrix(dados_tm)))
sum(is.na(as.matrix(dados_tm)))
sum(is.infinite(as.matrix(dados_tm)))
ncol(dados_tm)
nrow(dados_tm)
tm <- dados_tm
tm$NomeUsuario <- NULL
tm$Login <- NULL
tm$Email <- NULL
tm$TempoMedio <- NULL
# View(tm)
# Chunk 16
dttm <- as.data.table(tm)
dttm1 <- one_hot(dttm, cols = "auto", sparsifyNAs = FALSE, naCols = FALSE,
dropCols = TRUE, dropUnusedLevels = FALSE)
dftm <- as.data.frame(dttm1)
# Chunk 17
#Media da coluna - valor do atributo dividido pelo desvio padrão da coluna
df.sc = scale(dftm)
# View(df.sc)
ncol(df.sc)
nrow(df.sc)
# Chunk 18
df.grid = somgrid(xdim = 10, ydim=10, topo="hexagonal")
# Chunk 19
df.som = som(df.sc, grid=df.grid, rlen=500, alpha=c(0.05,0.01))
# Chunk 20
plot(df.som, type="changes")
# Chunk 21
plot(df.som, type="count") #Apenas visualiza os neronios com mais dados proximos. Não é o mapa de calor ainda.
# Chunk 22
plot(df.som, type="codes") # Essa visualização é muito importante porque
# mostra as caracteristicas principais que exercem poder de separação (no caso do iris isso seia a sepal.width).
# Mostra tambem quais são as caracteristicas que menos variam e que, portanto, deveriam ser desprezadas.
# Chunk 23
plot(df.som, type="dist.neighbours")
# Chunk 24
groups = 30
df.hc = cutree(hclust(dist(df.som$codes[[1]][,1:24])), groups)
# Chunk 25
add.cluster.boundaries(df.som, df.hc)
plot(df.som, type="codes", bgcol=rainbow(groups)[df.hc])
groups = 30
df.hc = cutree(hclust(dist(df.som$codes[[1]][,1:24])), groups)
add.cluster.boundaries(df.som, df.hc)
plot(df.som, type="codes", bgcol=rainbow(groups)[df.hc])
plot(df.som, type="count") #Apenas visualiza os neronios com mais dados proximos. Não é o mapa de calor ainda.
plot(df.som, type="codes") # Essa visualização é muito importante porque
# mostra as caracteristicas principais que exercem poder de separação (no caso do iris isso seia a sepal.width).
# Mostra tambem quais são as caracteristicas que menos variam e que, portanto, deveriam ser desprezadas.
plot(df.som, type="dist.neighbours")
groups = 30
df.hc = cutree(hclust(dist(df.som$codes[[1]][,1:24])), groups)
add.cluster.boundaries(df.som, df.hc)
plot(df.som, type="codes", bgcol=rainbow(groups)[df.hc])
# install.packages("kohonen")
library("kohonen")
set.seed(593)
dados_tm <- read.csv(file = "/Users/andrero/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalhos/Trabalho2/data/Usuarios-TempoMedioQuantidade.csv", header = TRUE, sep = ";")
# View(dados_tm)
sum(is.nan(as.matrix(dados_tm)))
sum(is.na(as.matrix(dados_tm)))
sum(is.infinite(as.matrix(dados_tm)))
ncol(dados_tm)
nrow(dados_tm)
tm <- dados_tm
tm$NomeUsuario <- NULL
tm$Login <- NULL
tm$Email <- NULL
tm$TempoMedio <- NULL
# View(tm)
dttm <- as.data.table(tm)
dttm1 <- one_hot(dttm, cols = "auto", sparsifyNAs = FALSE, naCols = FALSE,
dropCols = TRUE, dropUnusedLevels = FALSE)
dftm <- as.data.frame(dttm1)
#Media da coluna - valor do atributo dividido pelo desvio padrão da coluna
df.sc = scale(dftm)
# View(df.sc)
ncol(df.sc)
nrow(df.sc)
df.grid = somgrid(xdim = 10, ydim=10, topo="hexagonal")
plot(df.som, type="changes")
df.som = som(df.sc, grid=df.grid, rlen=500, alpha=c(0.05,0.01))
plot(df.som, type="changes")
plot(df.som, type="count") #Apenas visualiza os neronios com mais dados proximos. Não é o mapa de calor ainda.
plot(df.som, type="codes") # Essa visualização é muito importante porque
# mostra as caracteristicas principais que exercem poder de separação (no caso do iris isso seia a sepal.width).
# Mostra tambem quais são as caracteristicas que menos variam e que, portanto, deveriam ser desprezadas.
plot(df.som, type="dist.neighbours")
groups = 30
df.hc = cutree(hclust(dist(df.som$codes[[1]][,1:24])), groups)
add.cluster.boundaries(df.som, df.hc)
plot(df.som, type="codes", bgcol=rainbow(groups)[df.hc])
# View(df.som$codes[[1]])
clusterneuronio <-df.hc[df.som$unit.classif]
# View(clusterneuronio)
df$cluster <- clusterneuronio
plot(df.som, type="dist.neighbours")
groups = 30
df.hc = cutree(hclust(dist(df.som$codes[[1]][,1:24])), groups)
add.cluster.boundaries(df.som, df.hc)
plot(df.som, type="codes", bgcol=rainbow(groups)[df.hc])
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
library(plotly)
library(stargazer)
# install.packages("FactoMineR")
# install.packages("factoextra")
# install.packages("mltools")
# install.packages("data.table")
library("FactoMineR")
library("factoextra")
library("mltools")
library("caret")
library("data.table")
dados <- read.csv(file = "/Users/andrero/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalhos/Trabalho2/data/Usuarios-TempoMedioQuantidade.csv", header = TRUE, sep = ";")
# View(dados)
sum(is.nan(as.matrix(dados)))
sum(is.na(as.matrix(dados)))
sum(is.infinite(as.matrix(dados)))
ncol(dados)
nrow(dados)
df <- dados
df$NomeUsuario <- NULL
df$Login <- NULL
df$Email <- NULL
df$NomeEquipe <- NULL
# View(df)
View(dados)
sum(is.nan(as.matrix(dados)))
sum(is.na(as.matrix(dados)))
sum(is.infinite(as.matrix(dados)))
ncol(dados)
nrow(dados)
df <- dados
df$NomeUsuario <- NULL
df$Login <- NULL
df$Email <- NULL
df$NomeEquipe <- NULL
View(df)
boxplot(Quantidade ~ NomeEquipe, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
boxplot(Quantidade ~ ValorMedio, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
boxplot(Quantidade ~ TempoMedio, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
boxplot(TempoMedio ~ Quantidade, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
kc <- kmeans(df, 5, nstart = 50)
kc[["cluster"]]
kc[["centers"]]
fviz_cluster(kc, data = df)
k.max <- 20
wss <- sapply(1:k.max,
function(k){kmeans(df, k, nstart=50,iter.max = 50)$tot.withinss})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Número de clusters K",
ylab="Soma total da diferença dos quadrados internos dos clusters")
# install.packages("kohonen")
library("kohonen")
set.seed(593)
dados_tm <- read.csv(file = "/Users/andrero/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalhos/Trabalho2/data/Usuarios-TempoMedioQuantidade.csv", header = TRUE, sep = ";")
# View(dados_tm)
sum(is.nan(as.matrix(dados_tm)))
sum(is.na(as.matrix(dados_tm)))
sum(is.infinite(as.matrix(dados_tm)))
ncol(dados_tm)
nrow(dados_tm)
tm <- dados_tm
tm$NomeUsuario <- NULL
tm$Login <- NULL
tm$Email <- NULL
tm$NomeEquipe <- NULL
# View(tm)
df.grid = somgrid(xdim = 10, ydim=10, topo="hexagonal")
df.som = som(tm, grid=df.grid, rlen=500, alpha=c(0.05,0.01))
plot(df.som, type="changes")
View(tm)
df.grid = somgrid(xdim = 10, ydim=10, topo="hexagonal")
df.som = som(tm, grid=df.grid, rlen=500, alpha=c(0.05,0.01))
df.som = som(tm, grid=df.grid, rlen=500, alpha=c(0.05,0.01))
# install.packages("FactoMineR")
# install.packages("factoextra")
# install.packages("mltools")
# install.packages("data.table")
library("FactoMineR")
library("factoextra")
library("mltools")
library("caret")
library("data.table")
dados <- read.csv(file = "/Users/andrero/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalhos/Trabalho2/data/Usuarios-TempoMedioQuantidade.csv", header = TRUE, sep = ";")
# View(dados)
sum(is.nan(as.matrix(dados)))
sum(is.na(as.matrix(dados)))
sum(is.infinite(as.matrix(dados)))
ncol(dados)
nrow(dados)
df <- dados
df$NomeUsuario <- NULL
df$Login <- NULL
df$Email <- NULL
# View(df)
boxplot(TempoMedio ~ Quantidade, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
boxplot(TempoMedio ~ NomeEquipe, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
boxplot(Quantidade ~ NomeEquipe, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
kc <- kmeans(df1, 5, nstart = 50)
kc[["cluster"]]
kc[["centers"]]
dt <- as.data.table(df1)
dt1 <- one_hot(dt, cols = "auto", sparsifyNAs = FALSE, naCols = FALSE,
dropCols = TRUE, dropUnusedLevels = FALSE)
df1 <- as.data.frame(dt1)
df1$`NomeEquipe_Equipe Dados Pesquisa` <- NULL
kc <- kmeans(df1, 5, nstart = 50)
kc[["cluster"]]
kc[["centers"]]
fviz_cluster(kc, data = df1)
k.max <- 20
wss <- sapply(1:k.max,
function(k){kmeans(df, k, nstart=50,iter.max = 50)$tot.withinss})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Número de clusters K",
ylab="Soma total da diferença dos quadrados internos dos clusters")
# install.packages("FactoMineR")
# install.packages("factoextra")
# install.packages("mltools")
# install.packages("data.table")
library("FactoMineR")
library("factoextra")
library("mltools")
library("caret")
library("data.table")
dados <- read.csv(file = "/Users/andrero/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalhos/Trabalho2/data/Usuarios-TempoMedioQuantidade.csv", header = TRUE, sep = ";")
# View(dados)
sum(is.nan(as.matrix(dados)))
sum(is.na(as.matrix(dados)))
sum(is.infinite(as.matrix(dados)))
ncol(dados)
nrow(dados)
df <- dados
df$NomeUsuario <- NULL
df$Login <- NULL
df$Email <- NULL
# View(df)
sum(is.nan(as.matrix(dados)))
sum(is.na(as.matrix(dados)))
sum(is.infinite(as.matrix(dados)))
ncol(dados)
nrow(dados)
df <- dados
df$NomeUsuario <- NULL
df$Login <- NULL
df$Email <- NULL
# View(df)
boxplot(TempoMedio ~ Quantidade, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
boxplot(TempoMedio ~ NomeEquipe, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
boxplot(Quantidade ~ NomeEquipe, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
dt <- as.data.table(df1)
dt1 <- one_hot(dt, cols = "auto", sparsifyNAs = FALSE, naCols = FALSE,
dropCols = TRUE, dropUnusedLevels = FALSE)
df1 <- as.data.frame(dt1)
df1$`NomeEquipe_Equipe Dados Pesquisa` <- NULL
dt <- as.data.table(df1)
dt1 <- one_hot(dt, cols = "auto", sparsifyNAs = FALSE, naCols = FALSE,
dropCols = TRUE, dropUnusedLevels = FALSE)
df1 <- as.data.frame(dt1)
kc <- kmeans(df1, 5, nstart = 50)
kc[["cluster"]]
kc[["centers"]]
# install.packages("FactoMineR")
# install.packages("factoextra")
# install.packages("mltools")
# install.packages("data.table")
library("FactoMineR")
library("factoextra")
library("mltools")
library("caret")
library("data.table")
dados <- read.csv(file = "/Users/andrero/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalhos/Trabalho2/data/Usuarios-TempoMedioQuantidade.csv", header = TRUE, sep = ";")
# View(dados)
sum(is.nan(as.matrix(dados)))
sum(is.na(as.matrix(dados)))
sum(is.infinite(as.matrix(dados)))
ncol(dados)
nrow(dados)
df <- dados
df$NomeUsuario <- NULL
df$Login <- NULL
df$Email <- NULL
# View(df)
boxplot(TempoMedio ~ Quantidade, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
boxplot(TempoMedio ~ NomeEquipe, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
boxplot(Quantidade ~ NomeEquipe, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
dt <- as.data.table(df1)
dt1 <- one_hot(dt, cols = "auto", sparsifyNAs = FALSE, naCols = FALSE,
dropCols = TRUE, dropUnusedLevels = FALSE)
df1 <- as.data.frame(dt1)
kc <- kmeans(df1, 5, nstart = 50)
kc[["cluster"]]
kc[["centers"]]
dt <- as.data.table(df1)
dt1 <- one_hot(dt, cols = "auto", sparsifyNAs = FALSE, naCols = FALSE,
dropCols = TRUE, dropUnusedLevels = FALSE)
df1 <- as.data.frame(dt1)
kc <- kmeans(df1, 5, nstart = 50)
kc[["cluster"]]
kc[["centers"]]
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
library(plotly)
library(stargazer)
# install.packages("FactoMineR")
# install.packages("factoextra")
# install.packages("mltools")
# install.packages("data.table")
library("FactoMineR")
library("factoextra")
library("mltools")
library("caret")
library("data.table")
dados <- read.csv(file = "/Users/andrero/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalhos/Trabalho2/data/Usuarios-TempoMedioQuantidade.csv", header = TRUE, sep = ";")
# View(dados)
sum(is.nan(as.matrix(dados)))
sum(is.na(as.matrix(dados)))
sum(is.infinite(as.matrix(dados)))
ncol(dados)
nrow(dados)
df <- dados
df$NomeUsuario <- NULL
df$Login <- NULL
df$Email <- NULL
# View(df)
sum(is.nan(as.matrix(dados)))
sum(is.na(as.matrix(dados)))
sum(is.infinite(as.matrix(dados)))
ncol(dados)
nrow(dados)
df <- dados
df$NomeUsuario <- NULL
df$Login <- NULL
df$Email <- NULL
# View(df)
boxplot(TempoMedio ~ Quantidade, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
boxplot(TempoMedio ~ NomeEquipe, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
boxplot(Quantidade ~ NomeEquipe, data=df, main="Boxplot for NomeEquipe vs TempoMedio", cex.axis=0.5)
# View(df)
dt <- as.data.table(df1)
dt1 <- one_hot(dt, cols = "auto", sparsifyNAs = FALSE, naCols = FALSE,
dropCols = TRUE, dropUnusedLevels = FALSE)
df1 <- as.data.frame(dt1)
kc <- kmeans(df1, 5, nstart = 50)
View(df1)
View(df1)
dt <- as.data.table(df)
dt <- one_hot(dt, cols = "auto", sparsifyNAs = FALSE, naCols = FALSE,
dropCols = TRUE, dropUnusedLevels = FALSE)
df <- as.data.frame(dt)
View(df)
kc <- kmeans(df, 5, nstart = 50)
kc[["cluster"]]
kc[["centers"]]
fviz_cluster(kc, data = df)
kc <- kmeans(df, 8, nstart = 50)
kc[["cluster"]]
kc[["centers"]]
fviz_cluster(kc, data = df)
kc <- kmeans(df, 3, nstart = 50)
kc[["cluster"]]
kc[["centers"]]
fviz_cluster(kc, data = df)
kc <- kmeans(df, 4, nstart = 50)
kc[["cluster"]]
kc[["centers"]]
fviz_cluster(kc, data = df)
k.max <- 20
wss <- sapply(1:k.max,
function(k){kmeans(df, k, nstart=50,iter.max = 50)$tot.withinss})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Número de clusters K",
ylab="Soma total da diferença dos quadrados internos dos clusters")
# install.packages("kohonen")
library("kohonen")
set.seed(593)
dados_tm <- read.csv(file = "/Users/andrero/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalhos/Trabalho2/data/Usuarios-TempoMedioQuantidade.csv", header = TRUE, sep = ";")
# View(dados_tm)
sum(is.nan(as.matrix(dados_tm)))
sum(is.na(as.matrix(dados_tm)))
sum(is.infinite(as.matrix(dados_tm)))
ncol(dados_tm)
nrow(dados_tm)
tm <- dados_tm
tm$NomeUsuario <- NULL
tm$Login <- NULL
tm$Email <- NULL
# View(tm)
dttm <- as.data.table(tm)
dttm1 <- one_hot(dttm, cols = "auto", sparsifyNAs = FALSE, naCols = FALSE,
dropCols = TRUE, dropUnusedLevels = FALSE)
dftm <- as.data.frame(dttm1)
#Media da coluna - valor do atributo dividido pelo desvio padrão da coluna
df.sc = scale(dftm)
# View(df.sc)
ncol(df.sc)
nrow(df.sc)
df.grid = somgrid(xdim = 10, ydim=10, topo="hexagonal")
df.som = som(df.sc, grid=df.grid, rlen=500, alpha=c(0.05,0.01))
plot(df.som, type="changes")
plot(df.som, type="count") #Apenas visualiza os neronios com mais dados proximos. Não é o mapa de calor ainda.
plot(df.som, type="codes") # Essa visualização é muito importante porque
# mostra as caracteristicas principais que exercem poder de separação (no caso do iris isso seia a sepal.width).
# Mostra tambem quais são as caracteristicas que menos variam e que, portanto, deveriam ser desprezadas.
plot(df.som, type="dist.neighbours")
groups = 30
df.hc = cutree(hclust(dist(df.som$codes[[1]][,1:24])), groups)
plot(df.som, type="dist.neighbours")
add.cluster.boundaries(df.som, df.hc)
plot(df.som, type="codes", bgcol=rainbow(groups)[df.hc])
clusterneuronio <-df.hc[df.som$unit.classif]
df$cluster <- clusterneuronio
install.packages("digest", type="source")
install.packages("stringi",dep=TRUE)
