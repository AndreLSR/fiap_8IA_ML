knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# install.packages(c("ggplot2", "plotly", "stringi"),dep=TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
library(FactoMineR)
library(factoextra)
library(dbscan)
dados <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalhos/Trabalho8/data_nostd.csv", header = TRUE, sep = ",")
View(dados)
dados.scale <- scale(subset(dados, select = c(2:11)))
View(dados.scale)
set.seed(123)
res <- dbscan(dados.scale, eps = 1, MinPts = 12)
View(res)
fviz_cluster(res, dados.scale, geom = "point")
# print(res["cluster"])
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# install.packages(c("ggplot2", "plotly", "stringi"),dep=TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
library(FactoMineR)
library(factoextra)
library(dbscan)
dados <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalhos/Trabalho8/data_nostd.csv", header = TRUE, sep = ",")
View(dados)
dados.scale <- scale(subset(dados, select = c(2:11)))
View(dados.scale)
set.seed(123)
res <- dbscan(dados.scale, eps = 1, MinPts = 12)
View(res)
fviz_cluster(res, dados.scale, geom = "point")
print(res["cluster"])
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# install.packages(c("ggplot2", "plotly", "stringi"),dep=TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
library(FactoMineR)
library(factoextra)
library(dbscan)
dados <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalhos/Trabalho8/data_nostd.csv", header = TRUE, sep = ",")
View(dados)
dados.scale <- scale(subset(dados, select = c(2:11)))
View(dados.scale)
set.seed(123)
res <- dbscan(dados.scale, eps = 1, MinPts = 8)
View(res)
fviz_cluster(res, dados.scale, geom = "point")
print(res["cluster"])
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# install.packages(c("ggplot2", "plotly", "stringi"),dep=TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
library(FactoMineR)
library(factoextra)
library(dbscan)
dados <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/data_nostd_v2.csv", header = TRUE, sep = ",")
View(dados)
dados.scale <- scale(subset(dados, select = c(2:11)))
View(dados.scale)
set.seed(123)
res <- dbscan(dados.scale, eps = 1, MinPts = 8)
View(res)
fviz_cluster(res, dados.scale, geom = "point")
print(res["cluster"])
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# install.packages(c("ggplot2", "plotly", "stringi"),dep=TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
library(FactoMineR)
library(factoextra)
library(dbscan)
dados <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/data_nostd_v2.csv", header = TRUE, sep = ",")
View(dados)
dados.scale <- scale(subset(dados, select = c(2:11)))
View(dados.scale)
set.seed(123)
res <- dbscan(dados.scale, eps = 1, MinPts = 4)
View(res)
fviz_cluster(res, dados.scale, geom = "point")
print(res["cluster"])
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# install.packages(c("ggplot2", "plotly", "stringi"),dep=TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
library(FactoMineR)
library(factoextra)
library(dbscan)
dados <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/data_nostd_v2.csv", header = TRUE, sep = ",")
View(dados)
dados.scale <- scale(subset(dados, select = c(2:11)))
View(dados.scale)
set.seed(123)
res <- dbscan(dados.scale, eps = 1, MinPts = 10)
View(res)
fviz_cluster(res, dados.scale, geom = "point")
print(res["cluster"])
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# install.packages(c("ggplot2", "plotly", "stringi"),dep=TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
library(FactoMineR)
library(factoextra)
library(dbscan)
dados <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/data_nostd_v2.csv", header = TRUE, sep = ",")
View(dados)
dados.scale <- scale(subset(dados, select = c(2:11)))
View(dados.scale)
set.seed(123)
res <- dbscan(dados.scale, eps = 1, MinPts = 10)
View(res)
fviz_cluster(res, dados.scale, geom = "point")
print(res["cluster"])
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# install.packages(c("ggplot2", "plotly", "stringi"),dep=TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
library(FactoMineR)
library(factoextra)
library(dbscan)
dados <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/data_nostd_v2.csv", header = TRUE, sep = ",")
View(dados)
dados.scale <- scale(subset(dados, select = c(2:11)))
View(dados.scale)
set.seed(123)
res <- dbscan(dados.scale, eps = 1, MinPts = 9)
View(res)
fviz_cluster(res, dados.scale, geom = "point")
print(res["cluster"])
res <- dbscan(dados.scale, eps = 1, MinPts = 12)
View(res)
fviz_cluster(res, dados.scale, geom = "point")
dados2 <- dados
dados2$dbscan <- res$cluster
View(dados2)
write.csv(dados2,"/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/dados_clust_v2.csv", row.names=FALSE)
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# if (!require (c("ggplot2", "plotly", "stringi", "stargazer","reticulate", "FactoMineR", "factoextra"))) install.packages(c("ggplot2", "plotly", "stringi", "stargazer","reticulate"), dependencies = TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
library(FactoMineR)
library(factoextra)
dados_k <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/data_nostd_v2.csv", header = TRUE, sep = ",")
View(dados_k)
dados_k.scale <- scale(subset(dados_k, select = c(2:11)))
View(dados_k.scale)
kc <- kmeans(dados_k.scale, 5, nstart = 25)
View(kc)
kc[["size"]]
kc[["centers"]]
kc[["cluster"]]
kc[["withinss"]]
kc$iter
plot(x=dados_k.scale, col = kc$cluster, pch = 19, cex = .2)
points(kc$centers
, col=c("blue","purple","orange","red","green")
, pch = 8
, cex = 3
, lwd = 5)
fviz_cluster(kc, data = dados_k.scale)
k.max <- 50
wss <- sapply(1:k.max,
function(k){kmeans(dados_k.scale, k, nstart=25, iter.max = 50 )$tot.withinss})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Numero de clusters K",
ylab="Soma total da diferenca dos quadrados internos dos clusters")
k.max <- 20
wss <- sapply(1:k.max,
function(k){kmeans(dados_k.scale, k, nstart=25, iter.max = 50 )$tot.withinss})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Numero de clusters K",
ylab="Soma total da diferenca dos quadrados internos dos clusters")
k.max <- 30
wss <- sapply(1:k.max,
function(k){kmeans(dados_k.scale, k, nstart=25, iter.max = 50 )$tot.withinss})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Numero de clusters K",
ylab="Soma total da diferenca dos quadrados internos dos clusters")
k.max <- 40
wss <- sapply(1:k.max,
function(k){kmeans(dados_k.scale, k, nstart=25, iter.max = 50 )$tot.withinss})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Numero de clusters K",
ylab="Soma total da diferenca dos quadrados internos dos clusters")
dados_clust <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/dados_clust_v2.csv", header = TRUE, sep = ",")
dados_clust$kmeans <- kc$cluster
View(dados_clust)
write.csv(dados_clust,"/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/dados_clust_v2.csv", row.names=FALSE)
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# install.packages(c("ggplot2", "plotly", "stringi"),dep=TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
# install.packages("kohonen")
library("kohonen")
set.seed(593)
dados_tm <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/data_nostd_v2.csv", header = TRUE, sep = ",")
View(dados_tm)
sum(is.nan(as.matrix(dados_tm)))
sum(is.na(as.matrix(dados_tm)))
sum(is.infinite(as.matrix(dados_tm)))
ncol(dados_tm)
nrow(dados_tm)
dados_k.scale <- scale(subset(dados_k, select = c(2:11)))
View(dados_k.scale)
dados_k <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/data_nostd_v2.csv", header = TRUE, sep = ",")
View(dados_k)
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# install.packages(c("ggplot2", "plotly", "stringi"),dep=TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
# install.packages("kohonen")
library("kohonen")
set.seed(593)
dados_tm <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/data_nostd_v2.csv", header = TRUE, sep = ",")
View(dados_tm)
sum(is.nan(as.matrix(dados_tm)))
sum(is.na(as.matrix(dados_tm)))
sum(is.infinite(as.matrix(dados_tm)))
ncol(dados_tm)
nrow(dados_tm)
#Media da coluna - valor do atributo dividido pelo desvio padr??o da coluna
dados_tm.scale <- scale(subset(dados_tm, select = c(2:11)))
View(dados_tm.scale)
ncol(dados_tm.scale)
nrow(dados_tm.scale)
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# install.packages(c("ggplot2", "plotly", "stringi"),dep=TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
# install.packages("kohonen")
library("kohonen")
set.seed(593)
dados_tm <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/data_nostd_v2.csv", header = TRUE, sep = ",")
View(dados_tm)
sum(is.nan(as.matrix(dados_tm)))
sum(is.na(as.matrix(dados_tm)))
sum(is.infinite(as.matrix(dados_tm)))
ncol(dados_tm)
nrow(dados_tm)
#Media da coluna - valor do atributo dividido pelo desvio padr??o da coluna
dados_tm.scale <- scale(subset(dados_tm, select = c(2:11)))
View(dados_tm.scale)
ncol(dados_tm.scale)
nrow(dados_tm.scale)
df.grid = somgrid(xdim = 10, ydim=10, topo="hexagonal")
df.som = som(dados_tm.scale, grid=df.grid, rlen=500, alpha=c(0.05,0.01))
plot(df.som, type="changes")
plot(df.som, type="count") #Apenas visualiza os neronios com mais dados proximos. Nao e o mapa de calor ainda.
plot(df.som, type="codes") # Essa visualizacao ?? muito importante porque
# mostra as caracteristicas principais que exercem poder de separaca?o (no caso do iris isso seia a sepal.width).
# Mostra tambem quais sao as caracteristicas que menos variam e que, portanto, deveriam ser desprezadas.
plot(df.som, type="dist.neighbours")
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# install.packages(c("ggplot2", "plotly", "stringi"),dep=TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
# install.packages("kohonen")
library("kohonen")
set.seed(593)
dados_tm <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/data_nostd_v2.csv", header = TRUE, sep = ",")
View(dados_tm)
sum(is.nan(as.matrix(dados_tm)))
sum(is.na(as.matrix(dados_tm)))
sum(is.infinite(as.matrix(dados_tm)))
ncol(dados_tm)
nrow(dados_tm)
#Media da coluna - valor do atributo dividido pelo desvio padr??o da coluna
dados_tm.scale <- scale(subset(dados_tm, select = c(2:11)))
View(dados_tm.scale)
ncol(dados_tm.scale)
nrow(dados_tm.scale)
df.grid = somgrid(xdim = 10, ydim=10, topo="hexagonal")
df.som = som(dados_tm.scale, grid=df.grid, rlen=500, alpha=c(0.05,0.01))
View(df.som)
plot(df.som, type="changes")
plot(df.som, type="count") #Apenas visualiza os neronios com mais dados proximos. Nao e o mapa de calor ainda.
plot(df.som, type="codes") # Essa visualizacao ?? muito importante porque
# mostra as caracteristicas principais que exercem poder de separaca?o (no caso do iris isso seia a sepal.width).
# Mostra tambem quais sao as caracteristicas que menos variam e que, portanto, deveriam ser desprezadas.
plot(df.som, type="dist.neighbours")
groups = 5
df.hc = cutree(hclust(dist(df.som$codes[[1]][,1:10])), groups)
plot(df.som, type="dist.neighbours")
add.cluster.boundaries(df.som, df.hc)
plot(df.som, type="codes", bgcol=rainbow(groups)[df.hc])
View(df.som$codes[[1]])
clusterneuronio <-df.hc[df.som$unit.classif]
View(clusterneuronio)
dados_clust <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/dados_clust_v2.csv", header = TRUE, sep = ",")
dados_clust$som <- clusterneuronio
View(dados_clust)
write.csv(dados_clust,"/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/dados_clust_v2.csv", row.names=FALSE)
knitr::opts_chunk$set(
# fig.width=12,
# fig.height=8,
echo = TRUE,
error = TRUE,
warning=FALSE,
message=FALSE
)
rm(list = ls())
# install.packages(c("ggplot2", "plotly", "stringi"),dep=TRUE )
library(plotly)
library(stargazer)
library(reticulate)
# reticulate::py_config()
use_python("/Users/andrerodrigues/opt/anaconda3/bin/python") # Digite "which python" no seu terminal para determinar o caminho do python no seu computador
library(FactoMineR)
library(factoextra)
library(dbscan)
dados <- read.csv(file = "/Users/andrerodrigues/Google Drive/FIAP-MBA 8IA/006 - Modelos de IA e ML/Trabalho_Final_2/Exercicio8_v2/data_nostd_v2.csv", header = TRUE, sep = ",")
View(dados)
dados.scale <- scale(subset(dados, select = c(2:11)))
View(dados.scale)
set.seed(123)
res <- dbscan(dados.scale, eps = 1, MinPts = 12)
View(res)
fviz_cluster(res, dados.scale, geom = "point")
print(res["cluster"])
